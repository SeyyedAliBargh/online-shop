# Generated by Django 5.2 on 2025-10-31 17:13

import django.core.validators
import django.db.models.deletion
import django_jalali.db.models
import django_resized.forms
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory', models.PositiveIntegerField(default=0, verbose_name='inventory')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(verbose_name='description')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='slug')),
                ('weight', models.PositiveIntegerField(default=0, verbose_name='weight (grams)')),
                ('brand', models.CharField(blank=True, max_length=250, null=True, verbose_name='brand')),
                ('original_price', models.PositiveIntegerField(default=0, verbose_name='original price')),
                ('discount', models.PositiveSmallIntegerField(blank=True, help_text='Discount percent must be between 0 and 100.', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='discount (%)')),
                ('discounted_price', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='price after discount')),
                ('created_at', django_jalali.db.models.jDateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', django_jalali.db.models.jDateTimeField(auto_now=True, verbose_name='updated at')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='views')),
                ('sold_count', models.PositiveIntegerField(default=0, verbose_name='sold count')),
                ('average_rating', models.DecimalField(decimal_places=2, default=0, max_digits=3, verbose_name='average rating')),
                ('rating_count', models.PositiveIntegerField(default=0, verbose_name='rating count')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shop.category', verbose_name='category')),
            ],
            options={
                'verbose_name': 'product',
                'verbose_name_plural': 'products',
                'ordering': ('name', 'created_at'),
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_file', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=80, scale=None, size=[1920, 1080], upload_to='products_images', verbose_name='image')),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('created', django_jalali.db.models.jDateTimeField(auto_now_add=True, verbose_name='created at')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='shop.product', verbose_name='product')),
            ],
            options={
                'verbose_name': 'image',
                'verbose_name_plural': 'images',
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(verbose_name='comment body')),
                ('created', django_jalali.db.models.jDateTimeField(auto_now_add=True, verbose_name='created at')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='shop.comment', verbose_name='parent comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='user')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='shop.product', verbose_name='product')),
            ],
            options={
                'verbose_name': 'comment',
                'verbose_name_plural': 'comments',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='ProductFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='feature name')),
                ('value', models.CharField(max_length=250, verbose_name='feature value')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='shop.product', verbose_name='product')),
            ],
            options={
                'verbose_name': 'feature',
                'verbose_name_plural': 'features',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], verbose_name='rating score')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='shop.product', verbose_name='product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'rating',
                'verbose_name_plural': 'ratings',
                'ordering': ['-updated'],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='shop_produc_name_a2070e_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['slug'], name='shop_produc_slug_76971b_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['created_at'], name='shop_produc_created_ed077b_idx'),
        ),
        migrations.AddIndex(
            model_name='image',
            index=models.Index(fields=['created'], name='shop_image_created_6a3b1a_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['created'], name='shop_commen_created_d90939_idx'),
        ),
        migrations.AddIndex(
            model_name='productfeature',
            index=models.Index(fields=['name'], name='shop_produc_name_7e3995_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rating',
            unique_together={('product', 'user')},
        ),
    ]
